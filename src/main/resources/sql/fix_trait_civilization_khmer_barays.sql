-- Make amenities and faith generation in Aqueducts also applicable to (Roman) Baths.
UPDATE RequirementSets
SET RequirementSetType='REQUIREMENTSET_TEST_ANY'
WHERE RequirementSetId IN ('DISTRICT_IS_AQUEDUCT_FAITH', 'DISTRICT_IS_AQUEDUCT_AMENITY');

INSERT OR REPLACE INTO RequirementSetRequirements (RequirementSetId, RequirementId)
VALUES
    ('DISTRICT_IS_AQUEDUCT_FAITH', 'REQUIRES_DISTRICT_IS_BATH'),
    ('DISTRICT_IS_AQUEDUCT_AMENITY', 'REQUIRES_DISTRICT_IS_BATH');

-- Add +2 food to farms adjacent to (Roman) Baths.
INSERT OR REPLACE INTO Requirements (RequirementId, RequirementType, Inverse)
VALUES
    -- Trigger when adjacent to Baths...
    ('REQUIRES_NOT_ADJACENT_TO_BATH', 'REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES', 0),
    -- ... but not if the effect is already given by an aqueduct.
    ('REQUIRES_NOT_ADJACENT_TO_AQUEDUCT_BARAYS', 'REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES', 1);
INSERT OR REPLACE INTO RequirementArguments (RequirementId, Name, Value)
VALUES
    ('REQUIRES_NOT_ADJACENT_TO_BATH', 'DistrictType', 'DISTRICT_BATH'),
    ('REQUIRES_NOT_ADJACENT_TO_AQUEDUCT_BARAYS', 'DistrictType', 'DISTRICT_AQUEDUCT');

INSERT OR REPLACE INTO RequirementSets (RequirementSetId, RequirementSetType)
VALUES ('PLOT_IS_FARM_BATH_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIREMENTSET_TEST_ALL');
INSERT OR REPLACE INTO RequirementSetRequirements (RequirementSetId, RequirementId)
VALUES
    ('PLOT_IS_FARM_BATH_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_PLOT_HAS_FARM'),
    ('PLOT_IS_FARM_BATH_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_NOT_ADJACENT_TO_BATH'),
    ('PLOT_IS_FARM_BATH_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_NOT_ADJACENT_TO_AQUEDUCT_BARAYS');

INSERT OR REPLACE INTO Modifiers (ModifierId, ModifierType, SubjectRequirementSetId)
VALUES (
    'TRAIT_FARM_BATH_ADJECENCY_FOOD_FROM_BATH_BARAYS',
    'MODIFIER_PLAYER_ADJUST_PLOT_YIELD',
    'PLOT_IS_FARM_BATH_ADJACENT_BARAYS_REQUIRMENTS');
INSERT OR REPLACE INTO ModifierArguments (ModifierId, Name, Value)
VALUES
    ('TRAIT_FARM_BATH_ADJECENCY_FOOD_FROM_BATH_BARAYS', 'YieldType', 'YIELD_FOOD'),
    ('TRAIT_FARM_BATH_ADJECENCY_FOOD_FROM_BATH_BARAYS', 'Amount', '2');
INSERT OR REPLACE INTO TraitModifiers (TraitType, ModifierId)
VALUES ('TRAIT_CIVILIZATION_KHMER_BARAYS','TRAIT_FARM_BATH_ADJECENCY_FOOD_FROM_BATH_BARAYS');

-- Add +1 faith to farms adjacent to (Russian) Lavras.
INSERT OR REPLACE INTO Requirements (RequirementId, RequirementType, Inverse)
VALUES
    ('REQUIRES_PLOT_ADJACENT_TO_LAVRA', 'REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES', 0),
    ('REQUIRES_NOT_ADJACENT_TO_HOLY_SITE', 'REQUIREMENT_PLOT_ADJACENT_DISTRICT_TYPE_MATCHES', 1);
INSERT OR REPLACE INTO RequirementArguments (RequirementId, Name, Value)
VALUES
    ('REQUIRES_PLOT_ADJACENT_TO_LAVRA', 'DistrictType', 'DISTRICT_LAVRA'),
    ('REQUIRES_NOT_ADJACENT_TO_HOLY_SITE', 'DistrictType', 'DISTRICT_HOLY_SITE');

INSERT OR REPLACE INTO RequirementSets (RequirementSetId, RequirementSetType)
VALUES ('PLOT_IS_FARM_LAVRA_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIREMENTSET_TEST_ALL');
INSERT OR REPLACE INTO RequirementSetRequirements (RequirementSetId, RequirementId)
VALUES
    ('PLOT_IS_FARM_LAVRA_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_PLOT_HAS_FARM'),
    ('PLOT_IS_FARM_LAVRA_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_PLOT_ADJACENT_TO_LAVRA'),
    ('PLOT_IS_FARM_LAVRA_ADJACENT_BARAYS_REQUIRMENTS', 'REQUIRES_NOT_ADJACENT_TO_HOLY_SITE');

INSERT OR REPLACE INTO Modifiers (ModifierId, ModifierType, SubjectRequirementSetId)
VALUES (
    'TRAIT_FARM_LAVRA_ADJECENCY_FAITH_BARAYS',
    'MODIFIER_PLAYER_ADJUST_PLOT_YIELD',
    'PLOT_IS_FARM_LAVRA_ADJACENT_BARAYS_REQUIRMENTS');
INSERT OR REPLACE INTO ModifierArguments (ModifierId, Name, Value)
VALUES
    ('TRAIT_FARM_LAVRA_ADJECENCY_FAITH_BARAYS', 'YieldType', 'YIELD_FAITH'),
    ('TRAIT_FARM_LAVRA_ADJECENCY_FAITH_BARAYS', 'Amount', '1');
INSERT OR REPLACE INTO TraitModifiers (TraitType, ModifierId)
VALUES ('TRAIT_CIVILIZATION_KHMER_BARAYS','TRAIT_FARM_LAVRA_ADJECENCY_FAITH_BARAYS');